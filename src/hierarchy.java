import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class hierarchy {
    final static int total_data = 10506;
    final static int L1_size = 1;
    final static int L2_size = 16;
    final static int L3_size1 = 128;
    final static int L3_size2 = 2;
    final static int L4_size = 4096;
    static float L1_access = 0.0f;
    static float L1_hit = 0.0f;
    static float L2_access = 0.0f;
    static float L2_hit = 0.0f;
    static float L3_access = 0.0f;
    static float L3_hit = 0.0f;
    static float L4_access = 0.0f;
    static float L4_hit = 0.0f;
    public static float L1_hitRate() {
        return (L1_hit / L1_access);
    }
    public static float L2_hitRate() {
        return (L2_hit / L2_access);
    }
    public static float L3_hitRate() {
        return (L3_hit / L3_access);
    }
    public static float L4_hitRate() {
        return (L4_hit / L4_access);
    }
    public static void main(String[] args) {

        /* FILE INPUT SECTOR */
        String file_name = "1981-2021_USD-KRW_일일_종가.csv";
        File csv = new File(file_name);
        BufferedReader br;
        ArrayList<String> dataset = new ArrayList<>(); // EVEN -> DATE // ODD -> PRICE

        try { // VALID INPUT
            br = new BufferedReader(new FileReader(csv));
            String line;
            br.readLine();
            while ((line = br.readLine()) != null) {
                String[] token = line.split(",");
                dataset.add(token[0]); // DATE
                dataset.add(token[1]); // PRICE
            }
        }
        catch (Exception e) { // INVALID INPUT
            System.out.println("Error!");
        }

        // CACHE LEVEL
        ArrayList<Cache> L1 = new ArrayList<>();
        ArrayList<Cache> L2 = new ArrayList<>();
        ArrayList<Cache>[] L3 = new ArrayList[L3_size1];
        for (int i = 0; i < L3_size1; i++)
            L3[i] = new ArrayList<>();
        ArrayList<Cache> L4 = new ArrayList<>();
        ArrayList<Cache> Disk = new ArrayList<>();

        // dataset -> Disk
        for (int i = 0; i < total_data; i++)
            Disk.add(new Cache());

        for (int i = 0; i < dataset.size(); i++) {
            if (i % 2 == 0) {
                Disk.get(i / 2).setTag(Integer.parseInt(dataset.get(i).replace("-", "")));
                Disk.get(i / 2).setValid(1);
            }
            else
                Disk.get(i / 2).setBlock(Float.parseFloat(dataset.get(i)));
        }

        // Randomly Select Data
        ArrayList<Integer> used;
        Random r = new Random();
        int random;

        // Disk -> L4
        used = new ArrayList<>();
        for (int i = 0; i < L4_size / 4; i++) {
            random = r.nextInt(total_data / 4);
            if (!used.contains(random)) {
                used.add(random);
                L4.add(Disk.get(random * 4));
                L4.add(Disk.get(random * 4 + 1));
                L4.add(Disk.get(random * 4 + 2));
                L4.add(Disk.get(random * 4 + 3));
            }
            else
                i--;
        }
//        for (int i = 0; i < L4_size; i++)
//            System.out.println(L4.get(i).block.price);

        // L4 -> L3
        used = new ArrayList<>();

        for (int i = 0; i < L3_size1; i++)
            for (int j = 0; j < L3_size2; j++)
                L3[i].add(new Cache());

        for (int i = 0; i < L3_size1; i++) {
            random = r.nextInt(L4_size / 2);
            if (!used.contains(random)) {
                used.add(random);
                L3[i].add(0, L4.get(random * 2));
                L3[i].add(1, L4.get(random * 2 + 1));
            }
            else
                i--;
        }
//        for (int i = 0; i < L3_size1; i++)
//            System.out.println(L3[i].get(0).block.price + " " + L3[i].get(1).block.price);

        // L3 -> L2
        used = new ArrayList<>();
        for (int i = 0; i < L2_size / 2; i++) {
            random = r.nextInt(L3_size1);
            if (!used.contains(random)) {
                used.add(random);
                L2.add(L3[random].get(0));
                L2.add(L3[random].get(1));
            }
            else
                i--;
        }
//        for (int i = 0; i < L2_size; i++)
//            System.out.println(L2.get(i).block.price);

        // L2 -> L1
        random = r.nextInt(L2_size);
        L1.add(L2.get(random));
//        System.out.println("\n" + L1.get(0).block.price + " valid:" + L1.get(0).valid + " tag:" + L1.get(0).tag);

        // SAMPLE INPUTS TO MEASURE MISS RATE, CHOOSE & UNCOMMENT ONE sample_date FOR EXAMINE

        // CHECK SPATIAL LOCALITY / IMF ECONOMIC CRISIS, 1997 - 2001
        String[] sample_date1 = {"2001-12-31","2001-12-28","2001-12-27","2001-12-26","2001-12-25","2001-12-24","2001-12-21","2001-12-20","2001-12-19","2001-12-18","2001-12-17","2001-12-14","2001-12-13","2001-12-12","2001-12-11","2001-12-10","2001-12-07","2001-12-06","2001-12-05","2001-12-04","2001-12-03","2001-11-30","2001-11-29","2001-11-28","2001-11-27","2001-11-26","2001-11-23","2001-11-22","2001-11-21","2001-11-20","2001-11-19","2001-11-16","2001-11-15","2001-11-14","2001-11-13","2001-11-12","2001-11-09","2001-11-08","2001-11-07","2001-11-06","2001-11-05","2001-11-02","2001-11-01","2001-10-31","2001-10-30","2001-10-29","2001-10-26","2001-10-25","2001-10-24","2001-10-23","2001-10-22","2001-10-19","2001-10-18","2001-10-17","2001-10-16","2001-10-15","2001-10-12","2001-10-11","2001-10-10","2001-10-09","2001-10-08","2001-10-05","2001-10-04","2001-10-03","2001-10-02","2001-10-01","2001-09-28","2001-09-27","2001-09-26","2001-09-25","2001-09-24","2001-09-21","2001-09-20","2001-09-19","2001-09-18","2001-09-17","2001-09-14","2001-09-13","2001-09-12","2001-09-11","2001-09-10","2001-09-07","2001-09-06","2001-09-05","2001-09-04","2001-09-03","2001-08-31","2001-08-30","2001-08-29","2001-08-28","2001-08-27","2001-08-24","2001-08-23","2001-08-22","2001-08-21","2001-08-20","2001-08-17","2001-08-16","2001-08-15","2001-08-14","2001-08-13","2001-08-10","2001-08-09","2001-08-08","2001-08-07","2001-08-06","2001-08-03","2001-08-02","2001-08-01","2001-07-31","2001-07-30","2001-07-27","2001-07-26","2001-07-25","2001-07-24","2001-07-23","2001-07-20","2001-07-19","2001-07-18","2001-07-17","2001-07-16","2001-07-13","2001-07-12","2001-07-11","2001-07-10","2001-07-09","2001-07-06","2001-07-05","2001-07-04","2001-07-03","2001-07-02","2001-06-29","2001-06-28","2001-06-27","2001-06-26","2001-06-25","2001-06-22","2001-06-21","2001-06-20","2001-06-19","2001-06-18","2001-06-15","2001-06-14","2001-06-13","2001-06-12","2001-06-11","2001-06-08","2001-06-07","2001-06-06","2001-06-05","2001-06-04","2001-06-01","2001-05-31","2001-05-30","2001-05-29","2001-05-28","2001-05-25","2001-05-24","2001-05-23","2001-05-22","2001-05-21","2001-05-18","2001-05-17","2001-05-16","2001-05-15","2001-05-14","2001-05-11","2001-05-10","2001-05-09","2001-05-08","2001-05-07","2001-05-04","2001-05-03","2001-05-02","2001-05-01","2001-04-30","2001-04-27","2001-04-26","2001-04-25","2001-04-24","2001-04-23","2001-04-20","2001-04-19","2001-04-18","2001-04-17","2001-04-16","2001-04-13","2001-04-12","2001-04-11","2001-04-10","2001-04-09","2001-04-06","2001-04-05","2001-04-04","2001-04-03","2001-04-02","2001-03-30","2001-03-29","2001-03-28","2001-03-27","2001-03-26","2001-03-23","2001-03-22","2001-03-21","2001-03-20","2001-03-19","2001-03-16","2001-03-15","2001-03-14","2001-03-13","2001-03-12","2001-03-09","2001-03-08","2001-03-07","2001-03-06","2001-03-05","2001-03-02","2001-03-01","2001-02-28","2001-02-27","2001-02-26","2001-02-23","2001-02-22","2001-02-21","2001-02-20","2001-02-19","2001-02-16","2001-02-15","2001-02-14","2001-02-13","2001-02-12","2001-02-09","2001-02-08","2001-02-07","2001-02-06","2001-02-05","2001-02-02","2001-02-01","2001-01-31","2001-01-30","2001-01-29","2001-01-26","2001-01-25","2001-01-24","2001-01-23","2001-01-22","2001-01-19","2001-01-18","2001-01-17","2001-01-16","2001-01-15","2001-01-12","2001-01-11","2001-01-10","2001-01-09","2001-01-08","2001-01-05","2001-01-04","2001-01-03","2001-01-02","2000-12-29","2000-12-28","2000-12-27","2000-12-26","2000-12-25","2000-12-22","2000-12-21","2000-12-20","2000-12-19","2000-12-18","2000-12-15","2000-12-14","2000-12-13","2000-12-12","2000-12-11","2000-12-08","2000-12-07","2000-12-06","2000-12-05","2000-12-04","2000-12-01","2000-11-30","2000-11-29","2000-11-28","2000-11-27","2000-11-24","2000-11-23","2000-11-22","2000-11-21","2000-11-20","2000-11-17","2000-11-16","2000-11-15","2000-11-14","2000-11-13","2000-11-10","2000-11-09","2000-11-08","2000-11-07","2000-11-06","2000-11-03","2000-11-02","2000-11-01","2000-10-31","2000-10-30","2000-10-27","2000-10-26","2000-10-25","2000-10-24","2000-10-23","2000-10-20","2000-10-19","2000-10-18","2000-10-17","2000-10-16","2000-10-13","2000-10-12","2000-10-11","2000-10-10","2000-10-09","2000-10-06","2000-10-05","2000-10-04","2000-10-03","2000-10-02","2000-09-29","2000-09-28","2000-09-27","2000-09-26","2000-09-25","2000-09-22","2000-09-21","2000-09-20","2000-09-19","2000-09-18","2000-09-15","2000-09-14","2000-09-13","2000-09-12","2000-09-11","2000-09-08","2000-09-07","2000-09-06","2000-09-05","2000-09-04","2000-09-01","2000-08-31","2000-08-30","2000-08-29","2000-08-28","2000-08-25","2000-08-24","2000-08-23","2000-08-22","2000-08-21","2000-08-18","2000-08-17","2000-08-16","2000-08-15","2000-08-14","2000-08-11","2000-08-10","2000-08-09","2000-08-08","2000-08-07","2000-08-04","2000-08-03","2000-08-02","2000-08-01","2000-07-31","2000-07-28","2000-07-27","2000-07-26","2000-07-25","2000-07-24","2000-07-21","2000-07-20","2000-07-19","2000-07-18","2000-07-17","2000-07-14","2000-07-13","2000-07-12","2000-07-11","2000-07-10","2000-07-07","2000-07-06","2000-07-05","2000-07-04","2000-07-03","2000-06-30","2000-06-29","2000-06-28","2000-06-27","2000-06-26","2000-06-23","2000-06-22","2000-06-21","2000-06-20","2000-06-19","2000-06-16","2000-06-15","2000-06-14","2000-06-13","2000-06-12","2000-06-09","2000-06-08","2000-06-07","2000-06-06","2000-06-05","2000-06-02","2000-06-01","2000-05-31","2000-05-30","2000-05-29","2000-05-26","2000-05-25","2000-05-24","2000-05-23","2000-05-22","2000-05-19","2000-05-18","2000-05-17","2000-05-16","2000-05-15","2000-05-12","2000-05-11","2000-05-10","2000-05-09","2000-05-08","2000-05-05","2000-05-04","2000-05-03","2000-05-02","2000-05-01","2000-04-28","2000-04-27","2000-04-26","2000-04-25","2000-04-24","2000-04-21","2000-04-20","2000-04-19","2000-04-18","2000-04-17","2000-04-14","2000-04-13","2000-04-12","2000-04-11","2000-04-10","2000-04-07","2000-04-06","2000-04-05","2000-04-04","2000-04-03","2000-03-31","2000-03-30","2000-03-29","2000-03-28","2000-03-27","2000-03-24","2000-03-23","2000-03-22","2000-03-21","2000-03-20","2000-03-17","2000-03-16","2000-03-15","2000-03-14","2000-03-13","2000-03-10","2000-03-09","2000-03-08","2000-03-07","2000-03-06","2000-03-03","2000-03-02","2000-03-01","2000-02-29","2000-02-28","2000-02-25","2000-02-24","2000-02-23","2000-02-22","2000-02-21","2000-02-18","2000-02-17","2000-02-16","2000-02-15","2000-02-14","2000-02-11","2000-02-10","2000-02-09","2000-02-08","2000-02-07","2000-02-04","2000-02-03","2000-02-02","2000-02-01","2000-01-31","2000-01-28","2000-01-27","2000-01-26","2000-01-25","2000-01-24","2000-01-21","2000-01-20","2000-01-19","2000-01-18","2000-01-17","2000-01-14","2000-01-13","2000-01-12","2000-01-11","2000-01-10","2000-01-07","2000-01-06","2000-01-05","2000-01-04","2000-01-03","1999-12-31","1999-12-30","1999-12-29","1999-12-28","1999-12-27","1999-12-24","1999-12-23","1999-12-22","1999-12-21","1999-12-20","1999-12-17","1999-12-16","1999-12-15","1999-12-14","1999-12-13","1999-12-10","1999-12-09","1999-12-08","1999-12-07","1999-12-06","1999-12-03","1999-12-02","1999-12-01","1999-11-30","1999-11-29","1999-11-26","1999-11-25","1999-11-24","1999-11-23","1999-11-22","1999-11-19","1999-11-18","1999-11-17","1999-11-16","1999-11-15","1999-11-12","1999-11-11","1999-11-10","1999-11-09","1999-11-08","1999-11-05","1999-11-04","1999-11-03","1999-11-02","1999-11-01","1999-10-29","1999-10-28","1999-10-27","1999-10-26","1999-10-25","1999-10-22","1999-10-21","1999-10-20","1999-10-19","1999-10-18","1999-10-15","1999-10-14","1999-10-13","1999-10-12","1999-10-11","1999-10-08","1999-10-07","1999-10-06","1999-10-05","1999-10-04","1999-10-01","1999-09-30","1999-09-29","1999-09-28","1999-09-27","1999-09-24","1999-09-23","1999-09-22","1999-09-21","1999-09-20","1999-09-17","1999-09-16","1999-09-15","1999-09-14","1999-09-13","1999-09-10","1999-09-09","1999-09-08","1999-09-07","1999-09-06","1999-09-03","1999-09-02","1999-09-01","1999-08-31","1999-08-30","1999-08-27","1999-08-26","1999-08-25","1999-08-24","1999-08-23","1999-08-20","1999-08-19","1999-08-18","1999-08-17","1999-08-16","1999-08-13","1999-08-12","1999-08-11","1999-08-10","1999-08-09","1999-08-06","1999-08-05","1999-08-04","1999-08-03","1999-08-02","1999-07-30","1999-07-29","1999-07-28","1999-07-27","1999-07-26","1999-07-23","1999-07-22","1999-07-21","1999-07-20","1999-07-19","1999-07-16","1999-07-15","1999-07-14","1999-07-13","1999-07-12","1999-07-09","1999-07-08","1999-07-07","1999-07-06","1999-07-05","1999-07-02","1999-07-01","1999-06-30","1999-06-29","1999-06-28","1999-06-25","1999-06-24","1999-06-23","1999-06-22","1999-06-21","1999-06-18","1999-06-17","1999-06-16","1999-06-15","1999-06-14","1999-06-11","1999-06-10","1999-06-09","1999-06-08","1999-06-07","1999-06-04","1999-06-03","1999-06-02","1999-06-01","1999-05-31","1999-05-28","1999-05-27","1999-05-26","1999-05-25","1999-05-24","1999-05-21","1999-05-20","1999-05-19","1999-05-18","1999-05-17","1999-05-14","1999-05-13","1999-05-12","1999-05-11","1999-05-10","1999-05-07","1999-05-06","1999-05-05","1999-05-04","1999-05-03","1999-04-30","1999-04-29","1999-04-28","1999-04-27","1999-04-26","1999-04-23","1999-04-22","1999-04-21","1999-04-20","1999-04-19","1999-04-16","1999-04-15","1999-04-14","1999-04-13","1999-04-12","1999-04-09","1999-04-08","1999-04-07","1999-04-06","1999-04-05","1999-04-02","1999-04-01","1999-03-31","1999-03-30","1999-03-29","1999-03-26","1999-03-25","1999-03-24","1999-03-23","1999-03-22","1999-03-19","1999-03-18","1999-03-17","1999-03-16","1999-03-15","1999-03-12","1999-03-11","1999-03-10","1999-03-09","1999-03-08","1999-03-05","1999-03-04","1999-03-03","1999-03-02","1999-03-01","1999-02-26","1999-02-25","1999-02-24","1999-02-23","1999-02-22","1999-02-19","1999-02-18","1999-02-17","1999-02-16","1999-02-15","1999-02-12","1999-02-11","1999-02-10","1999-02-09","1999-02-08","1999-02-05","1999-02-04","1999-02-03","1999-02-02","1999-02-01","1999-01-29","1999-01-28","1999-01-27","1999-01-26","1999-01-25","1999-01-22","1999-01-21","1999-01-20","1999-01-19","1999-01-18","1999-01-15","1999-01-14","1999-01-13","1999-01-12","1999-01-11","1999-01-08","1999-01-07","1999-01-06","1999-01-05","1999-01-04","1998-12-31","1998-12-30","1998-12-29","1998-12-28","1998-12-25","1998-12-24","1998-12-23","1998-12-22","1998-12-21","1998-12-18","1998-12-17","1998-12-16","1998-12-15","1998-12-14","1998-12-11","1998-12-10","1998-12-09","1998-12-08","1998-12-07","1998-12-04","1998-12-03","1998-12-02","1998-12-01","1998-11-30","1998-11-27","1998-11-26","1998-11-25","1998-11-24","1998-11-23","1998-11-20","1998-11-19","1998-11-18","1998-11-17","1998-11-16","1998-11-13","1998-11-12","1998-11-11","1998-11-10","1998-11-09","1998-11-06","1998-11-05","1998-11-04","1998-11-03","1998-11-02","1998-10-30","1998-10-29","1998-10-28","1998-10-27","1998-10-26","1998-10-23","1998-10-22","1998-10-21","1998-10-20","1998-10-19","1998-10-16","1998-10-15","1998-10-14","1998-10-13","1998-10-12","1998-10-09","1998-10-08","1998-10-07","1998-10-06","1998-10-05","1998-10-02","1998-10-01","1998-09-30","1998-09-29","1998-09-28","1998-09-25","1998-09-24","1998-09-23","1998-09-22","1998-09-21","1998-09-18","1998-09-17","1998-09-16","1998-09-15","1998-09-14","1998-09-11","1998-09-10","1998-09-09","1998-09-08","1998-09-07","1998-09-04","1998-09-03","1998-09-02","1998-09-01","1998-08-31","1998-08-28","1998-08-27","1998-08-26","1998-08-25","1998-08-24","1998-08-21","1998-08-20","1998-08-19","1998-08-18","1998-08-17","1998-08-14","1998-08-13","1998-08-12","1998-08-11","1998-08-10","1998-08-07","1998-08-06","1998-08-05","1998-08-04","1998-08-03","1998-07-31","1998-07-30","1998-07-29","1998-07-28","1998-07-27","1998-07-24","1998-07-23","1998-07-22","1998-07-21","1998-07-20","1998-07-17","1998-07-16","1998-07-15","1998-07-14","1998-07-13","1998-07-10","1998-07-09","1998-07-08","1998-07-07","1998-07-06","1998-07-03","1998-07-02","1998-07-01","1998-06-30","1998-06-29","1998-06-26","1998-06-25","1998-06-24","1998-06-23","1998-06-22","1998-06-19","1998-06-18","1998-06-17","1998-06-16","1998-06-15","1998-06-12","1998-06-11","1998-06-10","1998-06-09","1998-06-08","1998-06-05","1998-06-04","1998-06-03","1998-06-02","1998-06-01","1998-05-29","1998-05-28","1998-05-27","1998-05-26","1998-05-25","1998-05-22","1998-05-21","1998-05-20","1998-05-19","1998-05-18","1998-05-15","1998-05-14","1998-05-13","1998-05-12","1998-05-11","1998-05-08","1998-05-07","1998-05-06","1998-05-05","1998-05-04","1998-05-01","1998-04-30","1998-04-29","1998-04-28","1998-04-27","1998-04-24","1998-04-23","1998-04-22","1998-04-21","1998-04-20","1998-04-17","1998-04-16","1998-04-15","1998-04-14","1998-04-13","1998-04-10","1998-04-09","1998-04-08","1998-04-07","1998-04-06","1998-04-03","1998-04-02","1998-04-01","1998-03-31","1998-03-30","1998-03-27","1998-03-26","1998-03-25","1998-03-24","1998-03-23","1998-03-20","1998-03-19","1998-03-18","1998-03-17","1998-03-16","1998-03-13","1998-03-12","1998-03-11","1998-03-10","1998-03-09","1998-03-06","1998-03-05","1998-03-04","1998-03-03","1998-03-02","1998-02-27","1998-02-26","1998-02-25","1998-02-24","1998-02-23","1998-02-20","1998-02-19","1998-02-18","1998-02-17","1998-02-16","1998-02-13","1998-02-12","1998-02-11","1998-02-10","1998-02-09","1998-02-06","1998-02-05","1998-02-04","1998-02-03","1998-02-02","1998-01-30","1998-01-29","1998-01-28","1998-01-27","1998-01-26","1998-01-23","1998-01-22","1998-01-21","1998-01-20","1998-01-19","1998-01-16","1998-01-15","1998-01-14","1998-01-13","1998-01-12","1998-01-09","1998-01-08","1998-01-07","1998-01-06","1998-01-05","1998-01-02","1997-12-31","1997-12-30","1997-12-29","1997-12-26","1997-12-25","1997-12-24","1997-12-23","1997-12-22","1997-12-19","1997-12-18","1997-12-17","1997-12-16","1997-12-15","1997-12-12","1997-12-11","1997-12-10","1997-12-09","1997-12-08","1997-12-05","1997-12-04","1997-12-03","1997-12-02","1997-12-01","1997-11-28","1997-11-27","1997-11-26","1997-11-25","1997-11-24","1997-11-21","1997-11-20","1997-11-19","1997-11-18","1997-11-17","1997-11-14","1997-11-13","1997-11-12","1997-11-11","1997-11-10","1997-11-07","1997-11-06","1997-11-05","1997-11-04","1997-11-03","1997-10-31","1997-10-30","1997-10-29","1997-10-28","1997-10-27","1997-10-24","1997-10-23","1997-10-22","1997-10-21","1997-10-20","1997-10-17","1997-10-16","1997-10-15","1997-10-14","1997-10-13","1997-10-10","1997-10-09","1997-10-08","1997-10-07","1997-10-06","1997-10-03","1997-10-02","1997-10-01","1997-09-30","1997-09-29","1997-09-26","1997-09-25","1997-09-24","1997-09-23","1997-09-22","1997-09-19","1997-09-18","1997-09-17","1997-09-16","1997-09-15","1997-09-12","1997-09-11","1997-09-10","1997-09-09","1997-09-08","1997-09-05","1997-09-04","1997-09-03","1997-09-02","1997-09-01","1997-08-29","1997-08-28","1997-08-27","1997-08-26","1997-08-25","1997-08-22","1997-08-21","1997-08-20","1997-08-19","1997-08-18","1997-08-15","1997-08-14","1997-08-13","1997-08-12","1997-08-11","1997-08-08","1997-08-07","1997-08-06","1997-08-05","1997-08-04","1997-08-01","1997-07-31","1997-07-30","1997-07-29","1997-07-28","1997-07-25","1997-07-24","1997-07-23","1997-07-22","1997-07-21","1997-07-18","1997-07-17","1997-07-16","1997-07-15","1997-07-14","1997-07-11","1997-07-10","1997-07-09","1997-07-08","1997-07-07","1997-07-04","1997-07-03","1997-07-02","1997-07-01","1997-06-30","1997-06-27","1997-06-26","1997-06-25","1997-06-24","1997-06-23","1997-06-20","1997-06-19","1997-06-18","1997-06-17","1997-06-16","1997-06-13","1997-06-12","1997-06-11","1997-06-10","1997-06-09","1997-06-06","1997-06-05","1997-06-04","1997-06-03","1997-06-02","1997-05-30","1997-05-29","1997-05-28","1997-05-27","1997-05-26","1997-05-23","1997-05-22","1997-05-21","1997-05-20","1997-05-19","1997-05-16","1997-05-15","1997-05-14","1997-05-13","1997-05-12","1997-05-09","1997-05-08","1997-05-07","1997-05-06","1997-05-05","1997-05-02","1997-05-01","1997-04-30","1997-04-29","1997-04-28","1997-04-25","1997-04-24","1997-04-23","1997-04-22","1997-04-21","1997-04-18","1997-04-17","1997-04-16","1997-04-15","1997-04-14","1997-04-11","1997-04-10","1997-04-09","1997-04-08","1997-04-07","1997-04-04","1997-04-03","1997-04-02","1997-04-01","1997-03-31","1997-03-28","1997-03-27","1997-03-26","1997-03-25","1997-03-24","1997-03-21","1997-03-20","1997-03-19","1997-03-18","1997-03-17","1997-03-14","1997-03-13","1997-03-12","1997-03-11","1997-03-10","1997-03-07","1997-03-06","1997-03-05","1997-03-04","1997-03-03","1997-02-28","1997-02-27","1997-02-26","1997-02-25","1997-02-24","1997-02-21","1997-02-20","1997-02-19","1997-02-18","1997-02-17","1997-02-14","1997-02-13","1997-02-12","1997-02-11","1997-02-10","1997-02-07","1997-02-06","1997-02-05","1997-02-04","1997-02-03","1997-01-31","1997-01-30","1997-01-29","1997-01-28","1997-01-27","1997-01-24","1997-01-23","1997-01-22","1997-01-21","1997-01-20","1997-01-17","1997-01-16","1997-01-15","1997-01-14","1997-01-13","1997-01-10","1997-01-09","1997-01-08","1997-01-07","1997-01-06","1997-01-03","1997-01-02"};

        // CHECK SPATIAL LOCALITY, REDUNDANT SEARCHING / 2008 GLOBAL ECONOMIC CRISIS
        String[] sample_date2 = {"2008-03-13", "2008-03-12", "2008-03-11", "2008-03-10",
                "2008-03-07", "2008-03-06", "2008-03-05", "2008-03-04", "2008-03-03",
                "2008-02-29", "2008-03-13", "2008-03-12", "2008-03-11", "2008-03-10",
                "2008-03-18", "2008-03-17", "2008-03-13", "2008-03-12", "2008-03-11", "2008-03-10"};

        // CHECK TEMPORAL LOCALITY / 2008 GLOBAL ECONOMIC CRISIS, 2008-03-13 / 1981-05-12 / 2021-12-31
        String[] sample_date3 = {"2008-03-13", "2008-03-13", "2008-03-13", "2008-03-13",
                "1981-05-12", "1981-05-12", "1981-05-12", "1981-05-12", "1981-05-12", "1981-05-12",
                "2021-12-31", "2021-12-31"};

        // RANDOM DATE
        String[] sample_date4 = {"2021-12-31", "1999-07-07", "1981-05-12", "2002-01-21", "2011-08-16", "2018-11-06",
                "2009-11-11", "1987-10-06", "2019-02-20", "1991-07-31", "2020-12-03", "1995-06-21"};

        Scanner scanner = new Scanner(System.in);
        int choice = 0;
        String[] sample_date = null;
        while (choice < 1 || choice > 4){
            System.out.print("Select Dataset (1 - 4) : ");
            choice = scanner.nextInt();
        }
        switch (choice) {
            case 1:
                sample_date = sample_date1;
                break;
            case 2:
                sample_date = sample_date2;
                break;
            case 3:
                sample_date = sample_date3;
                break;
            case 4:
                sample_date = sample_date4;
        }

        int[] samples = new int[sample_date.length];

        for(int i=0; i < sample_date.length; i++)
            samples[i] = Integer.parseInt(sample_date[i].replace("-",""));

        for (int sample : samples) {
            int seek;

            // SEEK SAMPLE IN L1
            L1_access++;
            seek = 0;
            if (sample == L1.get(seek).tag) {
                L1_hit++;
                System.out.println("In L1,\t Date:(" + sample + ") = ₩ " + L1.get(seek).block.price);
                continue;
            }

            // SEEK SAMPLE IN L2
            L2_access++;
            seek = 0;
            while (sample != L2.get(seek).tag) {
                seek++;
                if (seek == L2_size)
                    break;
            }

            if (seek < L2_size) {
                L2_hit++;
                System.out.println("In L2,\t Date:(" + sample + ") = ₩ " + L2.get(seek).block.price);
                // COPY TO UPPER CACHE: L2 -> L2, L1
                L1.remove(0);
                L1.add(L2.get(seek));
                L2.add(L2.get(seek));
                L2.remove(seek);
                continue;
            }

            // SEEK SAMPLE IN L3
            L3_access++;
            seek = 0;
            while (sample != L3[seek].get(0).tag && sample != L3[seek].get(1).tag) {
                seek++;
                if (seek == L3_size1)
                    break;
            }

            if (seek < L3_size1) {
                L3_hit++;
                if (sample == L3[seek].get(0).tag) {
                    System.out.println("In L3\t Date:(" + sample + ") = ₩ " + L3[seek].get(0).block.price);
                    L1.add(L3[seek].get(0));
                }
                else {
                    System.out.println("In L3,\t Date:(" + sample + ") = ₩ " + L3[seek].get(1).block.price);
                    L1.add(L3[seek].get(1));
                }
                // COPY TO UPPER CACHE: L3 -> L3, L2, L1
                L1.remove(0);

                L2.remove(0);
                L2.remove(0);
                L2.remove(0);
                L2.remove(0);
                L2.add(L3[seek].get(0));
                L2.add(L3[seek].get(1));
                if (seek == L3_size1 - 1) {
                    L2.add(L3[seek - 1].get(0));
                    L2.add(L3[seek - 1].get(1));
                }
                else {
                    L2.add(L3[seek + 1].get(0));
                    L2.add(L3[seek + 1].get(1));
                }

                for (int i = 0; i < L3_size1 - 1; i++)
                    L3[i] = L3[i + 1];
                for (int i = 0; i < L3_size1 - 1; i++)
                    L3[i] = L3[i + 1];
                L3[L3_size1 - 1].set(0, L2.get(L2_size - 1));
                L3[L3_size1 - 1].set(1, L2.get(L2_size - 2));
                L3[L3_size1 - 2].set(0, L2.get(L2_size - 3));
                L3[L3_size1 - 2].set(1, L2.get(L2_size - 4));
                continue;
            }

            // SEEK SAMPLE IN L4
            L4_access++;
            seek = 0;
            while (sample != L4.get(seek).tag) {
                seek++;
                if (seek == L4_size)
                    break;
            }

            if (seek < L4_size) {
                L4_hit++;
                System.out.println("In L4,\t Date:(" + sample + ") = ₩ " + L4.get(seek).block.price);
                // COPY TO UPPER CACHE: L4 -> L4, L3, L2, L1
                L1.add(L4.get(seek));
                L1.remove(0);

                L2.remove(0);
                L2.remove(0);
                L2.remove(0);
                L2.remove(0);

                for (int i = 0; i < L3_size1 - 1; i++)
                    L3[i] = L3[i + 1];
                for (int i = 0; i < L3_size1 - 1; i++)
                    L3[i] = L3[i + 1];

                if (seek < L4_size - 4) {
                    L2.add(L4.get(seek));
                    L2.add(L4.get(seek + 1));
                    L2.add(L4.get(seek + 2));
                    L2.add(L4.get(seek + 3));

                    L3[L3_size1 - 1].set(0, L4.get(seek));
                    L3[L3_size1 - 1].set(1, L4.get(seek + 1));
                    L3[L3_size1 - 2].set(0, L4.get(seek + 2));
                    L3[L3_size1 - 2].set(1, L4.get(seek + 3));

                    L4.add(L4.get(seek));
                    L4.add(L4.get(seek + 1));
                    L4.add(L4.get(seek + 2));
                    L4.add(L4.get(seek + 3));
                }
                else {
                    L4.add(L4.get(seek));
                    L4.add(L4.get(seek - 1));
                    L4.add(L4.get(seek - 2));
                    L4.add(L4.get(seek - 3));

                    L3[L3_size1 - 1].set(0, L4.get(seek));
                    L3[L3_size1 - 1].set(1, L4.get(seek - 1));
                    L3[L3_size1 - 2].set(0, L4.get(seek - 2));
                    L3[L3_size1 - 2].set(1, L4.get(seek - 3));

                    L4.add(L4.get(seek));
                    L4.add(L4.get(seek - 1));
                    L4.add(L4.get(seek - 2));
                    L4.add(L4.get(seek - 3));
                }

                L4.remove(0);
                L4.remove(0);
                L4.remove(0);
                L4.remove(0);
                continue;
            }

            // SEEK SAMPLE IN Disk
            seek = 0;
            while (sample != Disk.get(seek).tag) {
                seek++;
                if (seek == Disk.size())
                    break;
            }

            if (seek < Disk.size()) {
                System.out.println("\nIn Disk, Date:(" + sample + ") = ₩ " + Disk.get(seek).block.price);
                // COPY TO UPPER CACHE: Disk -> L4, L3, L2, L1
                L1.add(Disk.get(seek));
                L1.remove(0);

                L2.remove(0);
                L2.remove(0);
                L2.remove(0);
                L2.remove(0);

                for (int i = 0; i < L3_size1 - 1; i++)
                    L3[i] = L3[i + 1];
                for (int i = 0; i < L3_size1 - 1; i++)
                    L3[i] = L3[i + 1];

                if (seek < Disk.size() - 4) {
                    L2.add(Disk.get(seek));
                    L2.add(Disk.get(seek + 1));
                    L2.add(Disk.get(seek + 2));
                    L2.add(Disk.get(seek + 3));

                    L3[L3_size1 - 1].set(0, Disk.get(seek));
                    L3[L3_size1 - 1].set(1, Disk.get(seek + 1));
                    L3[L3_size1 - 2].set(0, Disk.get(seek + 2));
                    L3[L3_size1 - 2].set(1, Disk.get(seek + 3));

                    L4.add(Disk.get(seek));
                    L4.add(Disk.get(seek + 1));
                    L4.add(Disk.get(seek + 2));
                    L4.add(Disk.get(seek + 3));
                }
                else {
                    L4.add(Disk.get(seek));
                    L4.add(Disk.get(seek - 1));
                    L4.add(Disk.get(seek - 2));
                    L4.add(Disk.get(seek - 3));

                    L3[L3_size1 - 1].set(0, Disk.get(seek));
                    L3[L3_size1 - 1].set(1, Disk.get(seek - 1));
                    L3[L3_size1 - 2].set(0, Disk.get(seek - 2));
                    L3[L3_size1 - 2].set(1, Disk.get(seek - 3));

                    L4.add(Disk.get(seek));
                    L4.add(Disk.get(seek - 1));
                    L4.add(Disk.get(seek - 2));
                    L4.add(Disk.get(seek - 3));
                }

                L4.remove(0);
                L4.remove(0);
                L4.remove(0);
                L4.remove(0);
            }
        }

        // PRINT OUT MISS RATIO OR HIT RATIO
        System.out.println();
        System.out.println("L1 Cache Miss Rate : " + (1.0f - L1_hitRate()) * 100.0f + "%");
        System.out.println("L2 Cache Miss Rate : " + (1.0f - L2_hitRate()) * 100.0f + "%");
        System.out.println("L3 Cache Miss Rate : " + (1.0f - L3_hitRate()) * 100.0f + "%");
        System.out.println("L4 Cache Miss Rate : " + (1.0f - L4_hitRate()) * 100.0f + "%");
    }
}
